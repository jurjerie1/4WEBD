services:
  4WEBD_DB:
    image: postgres
    build:
      context: .
      dockerfile: ./Postgres/Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=user_db,event_db,ticket_db
    networks:
      - 4WEBD_network
    ports:
      - "5432:5432"
    volumes:
      - 4WEBD_DB_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 10s
      timeout: 5s
      retries: 5
  4WEBD_ApiGateway:
    image: 4webd_apigateway
    build:
      context: .
      dockerfile: 4WEBD.Gateways/Dockerfile
    networks:
      - 4WEBD_network
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - IdentityUrl=http://4webd_auth:8080
      - Jwt__Key=${JWT_KEY}
    depends_on:
      - 4WEBD_USER

  4WEBD_USER:
    image: 4webd_user
    build:
      context: .
      dockerfile: 4WEBD.User/Dockerfile
    networks:
      - 4WEBD_network
      - 4WEBD_notification_network
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__4WEBD_USER_DB=Host=4WEBD_DB;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=user_db
      - RABBITMQ_CONNECTIONSTRING=${RABBITMQ_CONNECTIONSTRING}
      - Jwt__Key=${JWT_KEY}
      - IdentityUrl=http://4webd_auth:8080
    depends_on:
      4WEBD_RabbitMQ:
        condition: service_healthy
      4WEBD_DB:
        condition: service_healthy
  4WEBD_AUTH:
    image: 4webd_auth
    build:
      context: .
      dockerfile: 4WEBD.Authentification/Dockerfile
    networks:
      - 4WEBD_network
      - 4WEBD_notification_network
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__4WEBD_USER_DB=Host=4WEBD_DB;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=user_db
      - RABBITMQ_CONNECTIONSTRING=${RABBITMQ_CONNECTIONSTRING}
      - Jwt__Key=${JWT_KEY}
    depends_on:
      - 4WEBD_USER

  4WEBD_EVENT:
    image: 4webd_event
    build:
      context: .
      dockerfile: 4WEBD.Event/Dockerfile
    networks:
      - 4WEBD_network
      - 4WEBD_notification_network
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__4webd_event=Host=4WEBD_DB;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=event_db
      - RABBITMQ_CONNECTIONSTRING=${RABBITMQ_CONNECTIONSTRING}
      - Jwt__Key=${JWT_KEY}
    volumes:
      - ./event_uploads:/app/Uploads/Images
    depends_on:
      - 4WEBD_USER

  4WEBD_TICKET:
    image: 4webd_ticket
    build:
      context: .
      dockerfile: 4WEBD.Ticket/Dockerfile
    networks:
      - 4WEBD_network
      - 4WEBD_notification_network
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__4webd_ticket=Host=4WEBD_DB;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=ticket_db
      - RABBITMQ_CONNECTIONSTRING=${RABBITMQ_CONNECTIONSTRING}
      - Jwt__Key=${JWT_KEY}
    depends_on:
      - 4WEBD_USER

  4WEBD_RabbitMQ:
    image: rabbitmq:4.0-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=secret
    networks:
      - 4WEBD_notification_network
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 3

  4WEBD_Notification:
    image: 4webd_notification
    build:
      context: .
      dockerfile: 4WEBD.NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - RABBITMQ_CONNECTIONSTRING=${RABBITMQ_CONNECTIONSTRING}
    networks:
      - 4WEBD_network
      - 4WEBD_notification_network
    depends_on:
      - 4WEBD_RabbitMQ
  4WEBD_MailHog:
    image: mailhog/mailhog
    logging:
      driver: "none"
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - 4WEBD_notification_network

networks:
  4WEBD_network:
    driver: bridge
  4WEBD_notification_network:
    driver: bridge

volumes:
  4WEBD_DB_data:
    driver: local
  event_uploads:
    driver: local
